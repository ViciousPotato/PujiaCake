// Generated by CoffeeScript 1.4.0
(function() {
  var Product, User, app, db, express, fs, generate_random_code, jade, mongoose, productSchema, userSchema;

  express = require('express');

  jade = require('jade');

  fs = require('fs');

  mongoose = require('mongoose');

  db = mongoose.createConnection('localhost', 'test');

  userSchema = mongoose.Schema({
    email: String,
    password: String
  });

  User = db.model('User', userSchema);

  productSchema = mongoose.Schema({
    name: String,
    description: String,
    price: String
  });

  Product = db.model('Product', productSchema);

  app = express();

  app.use(express.bodyParser());

  app.use(express.cookieParser('secret'));

  app.use(express.methodOverride());

  app.use(express.session({
    secret: 'secret',
    cookie: {
      maxAge: 6000
    }
  }));

  app.set('views', 'views/');

  app.set('view engine', 'jade');

  app.set('view options', {
    layout: true
  });

  generate_random_code = function() {
    return '' + parseInt(Math.random() * 10) + parseInt(Math.random() * 10) + parseInt(Math.random() * 10) + parseInt(Math.random() * 10);
  };

  app.get('/', function(req, res) {
    return res.send('hello world');
  });

  app.get('/index.html', function(req, res) {
    return res.sendfile('index.html');
  });

  app.get('/css/css/:file', function(req, res) {
    return res.sendfile('css/css/' + req.params.file);
  });

  app.get('/css/img/:file', function(req, res) {
    return res.sendfile('css/img/' + req.params.file);
  });

  app.get('/js/:file', function(req, res) {
    return res.sendfile('js/' + req.params.file);
  });

  app.get('/images/:file', function(req, res) {
    return res.sendfile('images/' + req.params.file);
  });

  app.get('/images/products/:file', function(req, res) {
    return res.sendfile('images/products/' + req.params.file);
  });

  app.get('/about/:file', function(req, res) {
    return res.sendfile('about/' + req.params.file);
  });

  app.get('/member/index.html', function(req, res) {
    var random_code;
    random_code = generate_random_code();
    return res.render('member_index.jade', {
      user: req.session['user'],
      random_code: random_code
    });
  });

  app.get('/member/register', function(req, res) {
    return res.render('member_register.jade');
  });

  app.post('/member/register', function(req, res) {
    var user;
    user = User({
      email: req.param('email'),
      password: req.param('password')
    });
    return user.save(function(err) {
      return res.redirect('member/register_success');
    });
  });

  app.get('/member/register_success', function(req, res) {
    return res.render('member_register_success.jade');
  });

  app.get('/member/login', function(req, res) {
    var random_code;
    random_code = generate_random_code();
    return res.render('member_index.jade', {
      user: req.session['user'],
      random_code: random_code
    });
  });

  app.post('/member/login', function(req, res) {
    return User.find({
      email: req.param('email'),
      password: req.param('password')
    }, function(err, users) {
      if (users.length === 0) {
        return res.render('member_login_failed.jade');
      } else {
        req.session['user'] = users[0];
        return res.render('member_login_success.jade');
      }
    });
  });

  app.get('/admin/', function(req, res) {
    return res.render('admin_index.jade', {
      active_index: 0
    });
  });

  app.get('/admin/list_members', function(req, res) {
    return User.find(function(err, users) {
      console.log(users);
      return res.render('admin_list_members.jade', {
        users: users,
        active_index: 1
      });
    });
  });

  app.get('/admin/add_product', function(req, res) {
    return res.render('admin_add_product.jade', {
      active_index: 2
    });
  });

  app.get('/admin/add_index_product', function(req, res) {
    return res.render('admin_add_index_product.jade', {
      active_index: 3
    });
  });

  app.post('/admin/add_product', function(req, res) {
    var product;
    product = Product({
      name: req.param('product_name'),
      description: req.param('product_description'),
      price: req.param('product_price')
    });
    return product.save(function(err) {
      return res.redirect('/admin/');
    });
  });

  app.get('/contact/:file', function(req, res) {
    return res.sendfile('contact/' + req.params.file);
  });

  app.get('/files/:file', function(req, res) {
    return res.sendfile('files/' + req.params.file);
  });

  app.get('/fonts/:file', function(req, res) {
    return res.sendfile('fonts/' + req.params.file);
  });

  app.get('/products/index.html', function(req, res) {
    return res.sendfile('products/index.html');
  });

  app.get('/products/:kind/index.html', function(req, res) {
    console.log(req.params.kind);
    if (req.params.kind === 'cakes') {
      return Product.find({}, function(err, products) {
        return res.render('products_cakes.jade', {
          products: products,
          user: req.session['user']
        });
      });
    } else {
      return res.sendfile('products/' + req.params.kind + '/index.html');
    }
  });

  app.listen(3000);

}).call(this);
