// Generated by CoffeeScript 1.4.0
(function() {
  var IndexProduct;

  IndexProduct = require('../../models/index-product');

  module.exports = function(app) {
    app.get('/admin/index-product', function(req, res) {
      return res.render('admin_index-product.jade', {
        active_index: 3
      });
    });
    app.get('/admin/index-product/delete/:productid', function(req, res) {
      return IndexProduct.remove({
        _id: req.params.productid
      }, function(error) {
        return res.redirect('/admin/index-product');
      });
    });
    app.get('/admin/index-product/list', function(req, res) {
      return IndexProduct.find({}, function(error, products) {
        if (error) {
          return res.json({
            error: error
          });
        }
        return res.json(products);
      });
    });
    app.post('/admin/index-product/update', function(req, res) {
      var key, setval, val;
      key = req.param('name');
      val = req.param('value');
      if (key === 'type') {
        val = val === '1' ? 'full' : 'withtext';
      }
      setval = {};
      setval[key] = val;
      return IndexProduct.update({
        _id: req.param('pk')
      }, {
        $set: setval
      }, function(err) {
        if (err) {
          return res.status(500);
        }
        return res.json({
          'status': 'ok'
        });
      });
    });
    return app.post('/admin/index-product', function(req, res) {
      var product;
      product = new IndexProduct({
        name: req.param('product_name'),
        description: req.param('product_description'),
        type: req.param('product_type'),
        link: req.param('product_link'),
        image: '/uploads/' + path.basename(req.files.product_image.path)
      });
      return product.save(function(error) {
        return res.render('admin_index-product.jade', {
          active_index: 3
        });
      });
    });
  };

}).call(this);
